Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.2.184 Build 20190117

Compiler options: -c -O2 -std=c++17 -qopt-report=3 -qopt-report-phase=vec

Begin optimization report for: applyJacobi(GridLevel *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at heat2d.cpp(88,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(95,4)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at heat2d.cpp(97,5)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at heat2d.cpp(97,5)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 3 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 22 
         remark #15477: vector cost: 10.000 
         remark #15478: estimated potential speedup: 2.140 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at heat2d.cpp(97,5)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at heat2d.cpp(97,5)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 3 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 22 
         remark #15477: vector cost: 10.000 
         remark #15478: estimated potential speedup: 2.140 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at heat2d.cpp(97,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: calculateResidual(GridLevel *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at heat2d.cpp(106,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(108,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(108,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 4 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 25 
      remark #15477: vector cost: 11.500 
      remark #15478: estimated potential speedup: 2.120 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(108,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at heat2d.cpp(108,5)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 4 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 25 
      remark #15477: vector cost: 11.500 
      remark #15478: estimated potential speedup: 2.120 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(108,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: calculateL2Norm(GridLevel *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at heat2d.cpp(116,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(118,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(118,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 2.190 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(118,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 2.190 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: applyRestriction(GridLevel *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at heat2d.cpp(127,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(129,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(129,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 9 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 36 
      remark #15477: vector cost: 23.000 
      remark #15478: estimated potential speedup: 1.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(129,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at heat2d.cpp(135,1)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(137,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at heat2d.cpp(137,3)
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.450 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at heat2d.cpp(137,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: applyProlongation(GridLevel *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at heat2d.cpp(145,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(147,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(147,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 5 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.630 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(147,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at heat2d.cpp(152,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(154,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(154,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 10 
      remark #15477: vector cost: 5.500 
      remark #15478: estimated potential speedup: 1.770 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(154,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at heat2d.cpp(154,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at heat2d.cpp(159,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(161,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(161,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 10 
      remark #15477: vector cost: 6.000 
      remark #15478: estimated potential speedup: 1.640 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(161,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 10 
      remark #15477: vector cost: 6.000 
      remark #15478: estimated potential speedup: 1.640 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at heat2d.cpp(166,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(168,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(168,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 16 
      remark #15477: vector cost: 8.500 
      remark #15478: estimated potential speedup: 1.840 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(168,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at heat2d.cpp(168,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 16 
      remark #15477: vector cost: 8.500 
      remark #15478: estimated potential speedup: 1.840 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at heat2d.cpp(172,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(174,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(174,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 3.030 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(174,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at heat2d.cpp(174,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 3.030 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: heat2DSolver(Heat2DSetup &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at heat2d.cpp(53,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(55,3)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(55,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 2 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 17 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 4.090 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(55,3)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at heat2d.cpp(55,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at heat2d.cpp(83,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at heat2d.cpp(83,35)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at heat2d.cpp(83,35)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 5.030 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at heat2d.cpp(83,35)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at heat2d.cpp(83,35)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at heat2d.cpp(29,2)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ heat2d.cpp(35,3) ]

   LOOP BEGIN at heat2d.cpp(35,3)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at heat2d.cpp(39,3)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at heat2d.cpp(43,3)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at heat2d.cpp(47,3)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at heat2d.cpp(61,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at heat2d.cpp(66,3)
      remark #15523: loop was not vectorized: loop control variable grid was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at heat2d.cpp(73,3)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END
===========================================================================
